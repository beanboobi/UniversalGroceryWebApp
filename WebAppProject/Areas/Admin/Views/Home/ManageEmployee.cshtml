    @model IEnumerable<WebAppProject.ViewModels.EmployeeViewModel>
    @using WebAppProject.Models
    @using Microsoft.AspNetCore.Identity;
    @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

    @inject UserManager<ApplicationUser> UserManager
    @inject SignInManager<ApplicationUser> SignInManager



@{
    ViewData["Title"] = "Manage Employees";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <h2>Manage Employees</h2>
    <div class="row mb-3">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search employees..." id="searchBox">
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="button" onclick="searchEmployees()">
                        <img src="~/images/search.png" alt="Search" style="width:20px;">
                    </button>
                </div>
            </div>
        </div>
        <div class="col-md-6 text-right">
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin"))
            {
                <a asp-area="Admin" asp-controller="Home" asp-action="AddEmployee" class="btn btn-primary">Add Employee</a>
            }
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Join Date</th>
                    <th>Salary</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="employeesTableBody">
                @foreach (var employee in Model)
                {
                    <tr>
                        <td>@employee.Id</td>
                        <td>@employee.Name</td>
                        <td>@employee.Email</td>
                        <td>@employee.Role</td>
                        <td>@employee.JoinDate.ToString("dd MMM yyyy")</td>
                        <td>@string.Format("{0:C}", employee.Salary)</td>
                        <td class="action-buttons">
                            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin"))
                            {
                                <a asp-area="Admin" asp-controller="Home" asp-action="EditEmployee" asp-route-id="@employee.Id">
                                    <img src="~/images/edit.png" alt="Edit" style="width:20px;" />
                                </a>
                                <form asp-area="Admin" asp-controller="Home" asp-action="DeleteEmployee" method="post" style="display:inline;" onsubmit="return confirmDelete(event)">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@employee.Id" />
                                    <button type="submit" class="btn btn-link p-0">
                                        <img src="~/images/remove.png" alt="Remove" style="width:20px;" />
                                    </button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function searchEmployees() {
            var searchBox = document.getElementById('searchBox');
            var filter = searchBox.value.toLowerCase();
            var rows = document.querySelectorAll('#employeesTableBody tr');

            rows.forEach(function (row) {
                var employeeName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                if (employeeName.includes(filter)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        function confirmDelete(event) {
            if (!confirm('Are you sure you want to delete this employee?')) {
                event.preventDefault();
                return false;
            }
            return true;
        }
    </script>
}

<style>
    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            font-weight: bold;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .form-group img {
            margin-top: 10px;
            margin-bottom: 10px;
        }

        .form-group button {
            margin: 5px;
            width: 100px;
        }

    .action-buttons {
        display: flex;
        gap: 10px;
        align-items: center;
    }

        .action-buttons form {
            display: inline-block;
        }

        .action-buttons img {
            cursor: pointer;
        }
</style>
