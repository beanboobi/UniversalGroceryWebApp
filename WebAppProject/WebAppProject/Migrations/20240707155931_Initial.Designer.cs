// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppProject.Data;

#nullable disable

namespace WebAppProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240707155931_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAppProject.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("JoinDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            JoinDate = "2024-01-01",
                            Name = "John Doe",
                            Password = "password123",
                            Role = "Admin",
                            Salary = 60000
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane.smith@example.com",
                            JoinDate = "2024-01-15",
                            Name = "Jane Smith",
                            Password = "password456",
                            Role = "Employee",
                            Salary = 50000
                        },
                        new
                        {
                            Id = 3,
                            Email = "bob.johnson@example.com",
                            JoinDate = "2024-02-01",
                            Name = "Bob Johnson",
                            Password = "password789",
                            Role = "Employee",
                            Salary = 55000
                        });
                });

            modelBuilder.Entity("WebAppProject.Models.GroceryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroceryItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Fruits",
                            CreatedDate = "2024-07-05",
                            Description = "Fresh apples",
                            Discount = 10,
                            ImageUrl = "/images/apple.png",
                            Name = "Apple",
                            Price = 0.99m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            Category = "Fruits",
                            CreatedDate = "2024-07-05",
                            Description = "Ripe bananas",
                            Discount = 15,
                            ImageUrl = "/images/banana.png",
                            Name = "Banana",
                            Price = 0.59m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            Category = "Fruits",
                            CreatedDate = "2024-07-05",
                            Description = "Juicy oranges",
                            Discount = 5,
                            ImageUrl = "/images/orange.png",
                            Name = "Orange",
                            Price = 1.29m,
                            Quantity = 75
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
